// Mocks generated by Mockito 5.3.2 from annotations
// in lomba_frontend/test/domain/usecases/orgas/orga_repository_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:lomba_frontend/core/failures.dart' as _i5;
import 'package:lomba_frontend/domain/entities/orga.dart' as _i6;
import 'package:lomba_frontend/domain/entities/orgauser.dart' as _i7;
import 'package:lomba_frontend/domain/repositories/orga_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [OrgaRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockOrgaRepository extends _i1.Mock implements _i3.OrgaRepository {
  MockOrgaRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Orga>>> getOrgas(
    String? filter,
    String? fieldOrder,
    double? pageNumber,
    int? pageSize,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOrgas,
          [
            filter,
            fieldOrder,
            pageNumber,
            pageSize,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, List<_i6.Orga>>>.value(
            _FakeEither_0<_i5.Failure, List<_i6.Orga>>(
          this,
          Invocation.method(
            #getOrgas,
            [
              filter,
              fieldOrder,
              pageNumber,
              pageSize,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Orga>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Orga>> getOrga(String? orgaId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOrga,
          [orgaId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Orga>>.value(
            _FakeEither_0<_i5.Failure, _i6.Orga>(
          this,
          Invocation.method(
            #getOrga,
            [orgaId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Orga>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i7.OrgaUser>>> getOrgaUsers(
          String? orgaId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOrgaUsers,
          [orgaId],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i7.OrgaUser>>>.value(
                _FakeEither_0<_i5.Failure, List<_i7.OrgaUser>>(
          this,
          Invocation.method(
            #getOrgaUsers,
            [orgaId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i7.OrgaUser>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i7.OrgaUser>>> getOrgaUser(
    String? orgaId,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOrgaUser,
          [
            orgaId,
            userId,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i7.OrgaUser>>>.value(
                _FakeEither_0<_i5.Failure, List<_i7.OrgaUser>>(
          this,
          Invocation.method(
            #getOrgaUser,
            [
              orgaId,
              userId,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i7.OrgaUser>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Orga>> addOrga(
    String? name,
    String? code,
    bool? enabled,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addOrga,
          [
            name,
            code,
            enabled,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Orga>>.value(
            _FakeEither_0<_i5.Failure, _i6.Orga>(
          this,
          Invocation.method(
            #addOrga,
            [
              name,
              code,
              enabled,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Orga>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.OrgaUser>> addOrgaUser(
    String? orgaId,
    String? userId,
    List<String>? roles,
    bool? enabled,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addOrgaUser,
          [
            orgaId,
            userId,
            roles,
            enabled,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i7.OrgaUser>>.value(
            _FakeEither_0<_i5.Failure, _i7.OrgaUser>(
          this,
          Invocation.method(
            #addOrgaUser,
            [
              orgaId,
              userId,
              roles,
              enabled,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.OrgaUser>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> deleteOrga(String? orgaId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteOrga,
          [orgaId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #deleteOrga,
            [orgaId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> deleteOrgaUser(
    String? orgaId,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteOrgaUser,
          [
            orgaId,
            userId,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #deleteOrgaUser,
            [
              orgaId,
              userId,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Orga>> enableOrga(
    String? orgaId,
    bool? enableOrDisable,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableOrga,
          [
            orgaId,
            enableOrDisable,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Orga>>.value(
            _FakeEither_0<_i5.Failure, _i6.Orga>(
          this,
          Invocation.method(
            #enableOrga,
            [
              orgaId,
              enableOrDisable,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Orga>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.OrgaUser>> enableOrgaUser(
    String? orgaId,
    String? userId,
    bool? enableOrDisable,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableOrgaUser,
          [
            orgaId,
            userId,
            enableOrDisable,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i7.OrgaUser>>.value(
            _FakeEither_0<_i5.Failure, _i7.OrgaUser>(
          this,
          Invocation.method(
            #enableOrgaUser,
            [
              orgaId,
              userId,
              enableOrDisable,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.OrgaUser>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Orga>> updateOrga(
    String? orgaId,
    _i6.Orga? orga,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateOrga,
          [
            orgaId,
            orga,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Orga>>.value(
            _FakeEither_0<_i5.Failure, _i6.Orga>(
          this,
          Invocation.method(
            #updateOrga,
            [
              orgaId,
              orga,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Orga>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Orga?>> existsOrga(
    String? orgaName,
    String? code,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #existsOrga,
          [
            orgaName,
            code,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Orga?>>.value(
            _FakeEither_0<_i5.Failure, _i6.Orga?>(
          this,
          Invocation.method(
            #existsOrga,
            [
              orgaName,
              code,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Orga?>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.OrgaUser>> updateOrgaUser(
    String? orgaId,
    String? userId,
    _i7.OrgaUser? orgaUser,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateOrgaUser,
          [
            orgaId,
            userId,
            orgaUser,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i7.OrgaUser>>.value(
            _FakeEither_0<_i5.Failure, _i7.OrgaUser>(
          this,
          Invocation.method(
            #updateOrgaUser,
            [
              orgaId,
              userId,
              orgaUser,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.OrgaUser>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Orga>>> getOrgasByUser(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOrgasByUser,
          [userId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, List<_i6.Orga>>>.value(
            _FakeEither_0<_i5.Failure, List<_i6.Orga>>(
          this,
          Invocation.method(
            #getOrgasByUser,
            [userId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Orga>>>);
}
